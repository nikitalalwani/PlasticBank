/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Transport;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.LogisticsOrganisation;
import Business.Organization.Organization;
import Business.Organization.Warehouse;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PlasticCollectorWorkRequest;
import Business.WorkQueue.TransportWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nikitalalwani
 */
public class TransportEmployeeWorkArea extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private LogisticsOrganisation logistics;
    private Enterprise enterprise;
    /**
     * Creates new form TransportEmployeeWorkArea
     */
    public TransportEmployeeWorkArea(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Organization organization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.logistics = (LogisticsOrganisation)organization;
        this.enterprise = enterprise;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)transportRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : logistics.getWorkQueue().getWorkRequestList()){
            if(request instanceof TransportWorkRequest){
            Object[] row = new Object[9];
            row[0] = request;
            row[1] = request.getSender().getUsername();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            row[4] = ((TransportWorkRequest)request).getSource();
            row[5] = ((TransportWorkRequest)request).getDestination();
            row[6] = request.getQuant();
            row[7] = ((TransportWorkRequest)request).getTransportationCost();
            row[8] = ((TransportWorkRequest)request).getNumberOfTrucks();
            model.addRow(row);
        }
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        transportRequestJTable = new javax.swing.JTable();
        assignPlasticRequest = new javax.swing.JButton();
        processPlasticRequest = new javax.swing.JButton();

        transportRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Status", "Source", "Destination", "Trucks", "Transport Cost", "Grade", "Quantity", "Money Earned"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transportRequestJTable);

        assignPlasticRequest.setText("Assign to me");
        assignPlasticRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignPlasticRequestActionPerformed(evt);
            }
        });

        processPlasticRequest.setText("Process Request");
        processPlasticRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processPlasticRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(assignPlasticRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(380, 380, 380)
                            .addComponent(processPlasticRequest)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(assignPlasticRequest)
                        .addComponent(processPlasticRequest))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignPlasticRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignPlasticRequestActionPerformed
        int selectedRow = transportRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please choose a row from the table");
            return;
        }

        WorkRequest request = (WorkRequest)transportRequestJTable.getValueAt(selectedRow, 0);
            System.out.println("###"+request.getStatus());
            if(request.getStatus().equals("Completed"))
            {
                JOptionPane.showMessageDialog(null, "This request has already been processed");
                return;
            }
            request.setReceiver(userAccount);
            request.setStatus("Pending");
            //checkPlastic.setEnabled(false);
    }//GEN-LAST:event_assignPlasticRequestActionPerformed

    private void processPlasticRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processPlasticRequestActionPerformed
        // TODO add your handling code here:

//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        userProcessContainer.add("ProcessPlastic", new ProcessPlasticRequestJPanel(userProcessContainer, userAccount, enterprise, warehouse, business));
//        layout.next(userProcessContainer);

    }//GEN-LAST:event_processPlasticRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignPlasticRequest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processPlasticRequest;
    private javax.swing.JTable transportRequestJTable;
    // End of variables declaration//GEN-END:variables
}
